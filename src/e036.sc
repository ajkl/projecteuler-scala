object e036 {
  println("Welcome to the Scala worksheet")       //> Welcome to the Scala worksheet
  
  val l = 585L                                    //> l  : Long = 585
  java.lang.Long.toString(l, 2)                   //> res0: String = 1001001001
  
  val limit = 1000000                             //> limit  : Int = 1000000
  val z = (0 until limit).zip((0 until limit).map(java.lang.Long.toString(_, 2)))
                                                  //> z  : scala.collection.immutable.IndexedSeq[(Int, String)] = Vector((0,0), (1
                                                  //| ,1), (2,10), (3,11), (4,100), (5,101), (6,110), (7,111), (8,1000), (9,1001),
                                                  //|  (10,1010), (11,1011), (12,1100), (13,1101), (14,1110), (15,1111), (16,10000
                                                  //| ), (17,10001), (18,10010), (19,10011), (20,10100), (21,10101), (22,10110), (
                                                  //| 23,10111), (24,11000), (25,11001), (26,11010), (27,11011), (28,11100), (29,1
                                                  //| 1101), (30,11110), (31,11111), (32,100000), (33,100001), (34,100010), (35,10
                                                  //| 0011), (36,100100), (37,100101), (38,100110), (39,100111), (40,101000), (41,
                                                  //| 101001), (42,101010), (43,101011), (44,101100), (45,101101), (46,101110), (4
                                                  //| 7,101111), (48,110000), (49,110001), (50,110010), (51,110011), (52,110100), 
                                                  //| (53,110101), (54,110110), (55,110111), (56,111000), (57,111001), (58,111010)
                                                  //| , (59,111011), (60,111100), (61,111101), (62,111110), (63,111111), (64,10000
                                                  //| 00), (65,1000001), (66,1000010), (67,1000011), (68,1000100), (69,1000101), (
                                                  //| 70,1000110), (71,1000111
                                                  //| Output exceeds cutoff limit.
  z.filter(x => (x._1.toString == x._1.toString.reverse) && x._2 == x._2.reverse).map(y => y._1).sum
                                                  //> res1: Int = 872187
  
}