object e002 {
  println("Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ... By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.")
                                                  //> Each new term in the Fibonacci sequence is generated by adding the previous 
                                                  //| two terms. By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5,
                                                  //|  8, 13, 21, 34, 55, 89, ... By considering the terms in the Fibonacci sequen
                                                  //| ce whose values do not exceed four million, find the sum of the even-valued 
                                                  //| terms.
  //solution 1
  def even(i: Int) = i%2 == 0                     //> even: (i: Int)Boolean
  var i = 1                                       //> i  : Int = 1
  var j = 2                                       //> j  : Int = 2
  var sum = 0                                     //> sum  : Int = 0
  while(j < 4000000) {
		if( even(j) ) sum += j
  	val temp = i
		i = j
		j += temp
  }
  println(sum)                                    //> 4613732
  
  //solution 2
  def fib(a: Int, b: Int): Stream[Int] = a #:: fib(b, a+b)
                                                  //> fib: (a: Int, b: Int)Stream[Int]
  fib(1, 2).takeWhile { x => x < 4000000 }.toList.filter(even(_)).sum
                                                  //> res0: Int = 4613732
  
}